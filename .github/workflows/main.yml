name: Build and Push to Cachix

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clean up disk
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true
          remove-android: true
          build-mount-path: '/nix'
          overprovision-lvm: true
          #remove-large-packages: 'true'
          #remove-cached-tools: 'true'
      
      # Check out the repository
      - uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            substituters = https://tiebe.cachix.org?priority=10 https://nix-community.cachix.org?priority=20 https://cache.nixos.org?priority=30 https://hyprland.cachix.org https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= tiebe.cachix.org-1:gIjdnOcIlX9TOKT6StlrNvhCAnQiy9vAoxMfzMhVg54= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc=
      - name: Setup Attic cache
        uses: ryanccn/attic-action@v0
        with:
          endpoint: ${{ secrets.ATTIC_ENDPOINT }}
          cache: ${{ secrets.ATTIC_CACHE }}
          token: ${{ secrets.ATTIC_TOKEN }}

      - name: Install nix-fast-build
        shell: bash
        run: |
          mkdir /nix/tmp
          nix profile install nixpkgs#nix-fast-build

            
      - name: Prefetch DisplayLink drivers
        run: nix-prefetch-url --name displaylink-610.zip https://www.synaptics.com/sites/default/files/exe_files/2024-10/DisplayLink%20USB%20Graphics%20Software%20for%20Ubuntu6.1-EXE.zip
      
      - name: Build Jupiter
        shell: bash
        run: |
          nix-fast-build --eval-workers 1 --skip-cached --no-nom --attic-cache=$ATTIC_CACHE \
              -f '.#nixosConfigurations.jupiter.config.system.build.toplevel'
        env:
          ATTIC_CACHE: ${{ secrets.ATTIC_CACHE }}
          TMPDIR: /nix/tmp
      - name: Build Pluto
        shell: bash
        run: |
          nix-fast-build --eval-workers 1 --skip-cached --no-nom --attic-cache=$ATTIC_CACHE \
              -f '.#nixosConfigurations.pluto.config.system.build.toplevel'
        env:
          ATTIC_CACHE: ${{ secrets.ATTIC_CACHE }}
          TMPDIR: /nix/tmp
          
      - name: Build Mercury
        shell: bash
        run: |
          nix-fast-build --eval-workers 1 --skip-cached --no-nom --attic-cache=$ATTIC_CACHE \
              -f '.#nixosConfigurations.mercury.config.system.build.toplevel'
        env:
          ATTIC_CACHE: ${{ secrets.ATTIC_CACHE }}
          TMPDIR: /nix/tmp

      - name: Check final storage
        if: always()
        run: df -h

