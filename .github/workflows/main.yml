name: Build and Push to Cachix

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clean up disk
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          build-mount-path: '/nix'
          overprovision-lvm: true
          #remove-large-packages: 'true'
          #remove-cached-tools: 'true'
      
      # Check out the repository
      - uses: actions/checkout@v3

      # Install Nix with flake support
      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Prefetch DisplayLink drivers
        run: nix-prefetch-url --name displaylink-610.zip https://www.synaptics.com/sites/default/files/exe_files/2024-10/DisplayLink%20USB%20Graphics%20Software%20for%20Ubuntu6.1-EXE.zip
        
      - name: Start cachix
        uses: cachix/cachix-action@v15
        with:
          name: tiebe
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      # Build and push the first system
      - name: Build and push Jupiter
        run: |
          echo "Building Jupiter..."
          nix build .#nixosConfigurations.jupiter.config.system.build.toplevel
          sudo -E env "PATH=$PATH" nix copy --to 'file:///nix' ./result
          cd /nix/nar
          sudo -E env "PATH=$PATH" tar -cvf jupiter.tar *

      - name: Upload Binary Closure Archive
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jupiter-closure.tar
          path: /nix/nar/jupiter.tar

      - run: df -h

      # Build and push the second system
      - name: Build and push Pluto
        run: |
          echo "Building Pluto..."
          sudo rm -rf /nix/nar
          nix build .#nixosConfigurations.pluto.config.system.build.toplevel
          sudo -E env "PATH=$PATH" nix copy --to 'file:///nix' ./result
          cd /nix/nar
          sudo -E env "PATH=$PATH" tar -cvf pluto.tar *

      - name: Upload Binary Closure Archive
        uses: actions/upload-artifact@v4.6.0
        with:
          name: pluto-closure.tar
          path: /nix/nar/pluto.tar

      - name: Check final storage
        if: always()
        run: df -h

